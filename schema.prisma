// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(DEVELOPER) // Adjusted according to the defined roles
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  QRCodeRequests QRCodeRequest[]
  ApiKeys        ApiKey[]
  RateLimits     RateLimit[]
  Analytics      AnalyticsRecord[] // Renamed for clarity
}

model QRCodeRequest {
  id              String               @id @default(uuid())
  inputData       String
  size            Int
  color           String
  errorCorrection ErrorCorrectionLevel
  format          QRCodeFormat
  responseFormat  ResponseFormat
  createdAt       DateTime             @default(now())
  userId          String

  User User @relation(fields: [userId], references: [id])
}

model ApiKey {
  id        String   @id @default(uuid())
  key       String   @unique
  createdAt DateTime @default(now())
  userId    String

  User User @relation(fields: [userId], references: [id])
}

model RateLimit {
  id        String   @id @default(uuid())
  requests  Int
  interval  Int // Interval in seconds
  createdAt DateTime @default(now())
  lastReset DateTime @default(now())
  userId    String

  User User @relation(fields: [userId], references: [id])
}

model AnalyticsRecord {
  id         String   @id @default(uuid())
  eventType  String
  eventValue String
  createdAt  DateTime @default(now())
  userId     String

  User User @relation(fields: [userId], references: [id])
}

enum Role {
  DEVELOPER
  MARKETER
  ORGANIZER
  ADMIN
}

enum ErrorCorrectionLevel {
  L // up to 7% error correction
  M // up to 15% error correction
  Q // up to 25% error correction
  H // up to 30% error correction
}

enum QRCodeFormat {
  PNG
  SVG
  EPS
}

enum ResponseFormat {
  BINARY
  BASE64
}

